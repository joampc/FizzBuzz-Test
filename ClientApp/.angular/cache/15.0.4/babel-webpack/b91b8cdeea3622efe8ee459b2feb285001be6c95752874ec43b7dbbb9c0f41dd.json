{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet AppComponent = class AppComponent {\n  constructor(fizzBuzzService, cdr) {\n    this.fizzBuzzService = fizzBuzzService;\n    this.cdr = cdr;\n  }\n  ngOnInit() {}\n  generateSeries() {\n    this.fizzColor = this.getRandomColor();\n    this.buzzColor = this.getRandomColor();\n    this.fizzBuzzService.getFizzBuzzSeries(this.randomNumber, this.limit).subscribe(series => {\n      this.seriesFB = series;\n    });\n  }\n  generateRandom(min = 1, max = 100) {\n    this.randomNumber = Math.floor(Math.random() * (max - min + 1)) + min;\n  }\n  formIsValid() {\n    return this.limit > this.randomNumber;\n  }\n  isNumber(val) {\n    return typeof val === 'number';\n  }\n  getSquareColor(element) {\n    let color = '';\n    if (element === 'fizz') {\n      color = this.fizzColor;\n    } else if (element === 'buzz') {\n      color = this.buzzColor;\n    } else if (element === 'buzz') {\n      color = this.buzzColor;\n    }\n    // else \n    // if (element === 'fizzbuzz') {\n    //   color = this.getSquareGradient();}\n    else {\n      color = this.getRandomColor();\n    }\n    return color;\n  }\n  getSquareGradient(element) {\n    if (element === 'fizzbuzz') {\n      return `linear-gradient(to right, ${this.fizzColor}, ${this.buzzColor})`;\n    }\n  }\n  getRandomColor() {\n    const letters = '0123456789ABCDEF';\n    let color = '#';\n    for (let i = 0; i < 6; i++) {\n      color += letters[Math.floor(Math.random() * 16)];\n    }\n    return color;\n  }\n};\nAppComponent = __decorate([Component({\n  selector: 'app-fizzbuzz',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})], AppComponent);\nexport { AppComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAe1C,IAAMC,YAAY,GAAlB,MAAMA,YAAY;EAQvBC,YAAoBC,eAAgC,EAAUC,GAAS;IAAnD,oBAAe,GAAfD,eAAe;IAA2B,QAAG,GAAHC,GAAG;EAAU;EAE3EC,QAAQ,IACR;EAEAC,cAAc;IACZ,IAAI,CAACC,SAAS,GAAG,IAAI,CAACC,cAAc,EAAE;IACtC,IAAI,CAACC,SAAS,GAAG,IAAI,CAACD,cAAc,EAAE;IAEtC,IAAI,CAACL,eAAe,CAACO,iBAAiB,CAAC,IAAI,CAACC,YAAY,EAAE,IAAI,CAACC,KAAK,CAAC,CAACC,SAAS,CAAEC,MAAW,IAAI;MAC9F,IAAI,CAACC,QAAQ,GAAGD,MAAM;IAExB,CAAC,CAAC;EACJ;EACAE,cAAc,CAACC,GAAG,GAAE,CAAC,EAAEC,GAAG,GAAC,GAAG;IAC5B,IAAI,CAACP,YAAY,GAAEQ,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,IAAIH,GAAG,GAAGD,GAAG,GAAG,CAAC,CAAC,CAAC,GAAGA,GAAG;EACtE;EAEAK,WAAW;IACT,OAAO,IAAI,CAACV,KAAK,GAAG,IAAI,CAACD,YAAY;EACvC;EAEAY,QAAQ,CAACC,GAAQ;IAAa,OAAO,OAAOA,GAAG,KAAK,QAAQ;EAAE;EAI9DC,cAAc,CAACC,OAAwB;IACtC,IAAIC,KAAK,GAAG,EAAE;IACd,IAAID,OAAO,KAAK,MAAM,EAAE;MACvBC,KAAK,GAAG,IAAI,CAACpB,SAAS;KAAE,MAExB,IAAImB,OAAO,KAAK,MAAM,EAAE;MACtBC,KAAK,GAAG,IAAI,CAAClB,SAAS;KAAE,MAE1B,IAAIiB,OAAO,KAAK,MAAM,EAAE;MACtBC,KAAK,GAAG,IAAI,CAAClB,SAAS;;IACxB;IACA;IACA;IAAA,KACI;MACAkB,KAAK,GAAG,IAAI,CAACnB,cAAc,EAAE;;IAKjC,OAAOmB,KAAK;EAEd;EAECC,iBAAiB,CAACF,OAAwB;IAC3C,IAAIA,OAAO,KAAK,UAAU,EAAE;MACxB,OAAO,6BAA6B,IAAI,CAACnB,SAAS,KAAK,IAAI,CAACE,SAAS,GAAG;;EAE5E;EAEAD,cAAc;IACZ,MAAMqB,OAAO,GAAG,kBAAkB;IAClC,IAAIF,KAAK,GAAG,GAAG;IACf,KAAK,IAAIG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;MAC1BH,KAAK,IAAIE,OAAO,CAACV,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC;;IAGlD,OAAOM,KAAK;EACd;CAED;AAzEY1B,YAAY,eALxBD,SAAS,CAAC;EACT+B,QAAQ,EAAE,cAAc;EACxBC,WAAW,EAAE,sBAAsB;EACnCC,SAAS,EAAE,CAAC,qBAAqB;CAClC,CAAC,GACWhC,YAAY,CAyExB;SAzEYA,YAAY","names":["Component","AppComponent","constructor","fizzBuzzService","cdr","ngOnInit","generateSeries","fizzColor","getRandomColor","buzzColor","getFizzBuzzSeries","randomNumber","limit","subscribe","series","seriesFB","generateRandom","min","max","Math","floor","random","formIsValid","isNumber","val","getSquareColor","element","color","getSquareGradient","letters","i","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\Daynel\\Downloads\\FizzBuzz\\ClientApp\\src\\app\\app.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FizzBuzzService } from './fizz-buzz.service';\nimport {ChangeDetectorRef } from '@angular/core';\n\n\n\n\n\n\n\n@Component({\n  selector: 'app-fizzbuzz',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  seriesFB: any;\n  randomNumber!: number;\n  limit!: number;\n  randomN!: number;\n  fizzColor!: string;\n  buzzColor!: string;\n\n  constructor(private fizzBuzzService: FizzBuzzService, private cdr: Chan) { }\n\n  ngOnInit(): void {\n  }\n\n  generateSeries(): void {\n    this.fizzColor = this.getRandomColor();\n    this.buzzColor = this.getRandomColor();\n\n    this.fizzBuzzService.getFizzBuzzSeries(this.randomNumber, this.limit).subscribe((series: any) => {\n      this.seriesFB = series;\n     \n    });\n  }\n  generateRandom(min =1, max=100) {\n    this.randomNumber= Math.floor(Math.random() * (max - min + 1)) + min;\n  }\n\n  formIsValid() {\n    return this.limit > this.randomNumber;\n  }\n\n  isNumber(val: any): boolean { return typeof val === 'number'; }\n\n\n\n  getSquareColor(element: number | string): any {\n   let color = ''\n   if (element === 'fizz') {\n    color = this.fizzColor;}\n    else\n    if (element === 'buzz') {\n      color = this.buzzColor;}\n    else \n    if (element === 'buzz') {\n      color = this.buzzColor;}\n    // else \n    // if (element === 'fizzbuzz') {\n    //   color = this.getSquareGradient();}\n    else{\n        color = this.getRandomColor()\n      }\n\n\n    \n    return color\n   \n  }\n\n   getSquareGradient(element: number | string): any {\n  if (element === 'fizzbuzz') {\n      return `linear-gradient(to right, ${this.fizzColor}, ${this.buzzColor})`;\n    }\n  }\n\n  getRandomColor(): string {\n    const letters = '0123456789ABCDEF';\n    let color = '#';\n    for (let i = 0; i < 6; i++) {\n      color += letters[Math.floor(Math.random() * 16)];\n    }\n\n    return color;\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}