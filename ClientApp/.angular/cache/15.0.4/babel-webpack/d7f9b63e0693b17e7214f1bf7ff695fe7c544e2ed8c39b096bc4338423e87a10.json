{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./fizz-buzz.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction AppComponent_div_17_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 10);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const element_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(element_r1);\n  }\n}\nfunction AppComponent_div_17_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const element_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(element_r1);\n  }\n}\nfunction AppComponent_div_17_br_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"br\");\n  }\n}\nfunction AppComponent_div_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"span\", 7);\n    i0.ɵɵtemplate(2, AppComponent_div_17_span_2_Template, 2, 1, \"span\", 8);\n    i0.ɵɵtemplate(3, AppComponent_div_17_span_3_Template, 2, 1, \"span\", 9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(4, AppComponent_div_17_br_4_Template, 1, 0, \"br\", 9);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const element_r1 = ctx.$implicit;\n    const i_r2 = ctx.index;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleProp(\"background-color\", ctx_r0.getSquareColor(element_r1, i_r2))(\"background\", ctx_r0.getSquareGradient(element_r1));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.isNumber(element_r1));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.isNumber(element_r1));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (i_r2 + 1) % 10 === 0);\n  }\n}\nexport class AppComponent {\n  constructor(fizzBuzzService, cdr) {\n    this.fizzBuzzService = fizzBuzzService;\n    this.cdr = cdr;\n  }\n  ngOnInit() {}\n  generateSeries() {\n    this.fizzBuzzService.getFizzBuzzSeries(this.randomNumber, this.limit).subscribe(series => {\n      setTimeout(() => {\n        this.seriesFB = series;\n      });\n    });\n  }\n  generateRandom(min = 1, max = 100) {\n    this.randomNumber = Math.floor(Math.random() * (max - min + 1)) + min;\n  }\n  formIsValid() {\n    return this.limit > this.randomNumber;\n  }\n  isNumber(val) {\n    return typeof val === 'number';\n  }\n  getSquareColor(element, i) {\n    let color = '';\n    if (i === 0) {\n      this.fizzColor = this.getRandomColor();\n      this.buzzColor = this.getRandomColor();\n    }\n    if (element === 'fizz') {\n      color = this.fizzColor;\n    } else if (element === 'buzz') {\n      color = this.buzzColor;\n    } else {\n      color = this.getRandomColor();\n    }\n    this.cdr.detectChanges;\n    return color;\n  }\n  getSquareGradient(element) {\n    if (element === 'fizzbuzz') {\n      return `linear-gradient(to right, ${this.fizzColor}, ${this.buzzColor})`;\n    }\n  }\n  getRandomColor() {\n    const letters = '0123456789ABCDEF';\n    let color = '#';\n    for (let i = 0; i < 6; i++) {\n      color += letters[Math.floor(Math.random() * 16)];\n    }\n    return color;\n  }\n}\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.FizzBuzzService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-fizzbuzz\"]],\n  decls: 18,\n  vars: 4,\n  consts: [[\"for\", \"randomNumber\"], [\"type\", \"number\", \"id\", \"randomNumber\", \"name\", \"randomNumber\", \"readonly\", \"true\", 3, \"ngModel\", \"ngModelChange\"], [3, \"click\"], [\"for\", \"limit\"], [\"type\", \"number\", \"id\", \"limit\", \"name\", \"limit\", 3, \"ngModel\", \"ngModelChange\"], [3, \"disabled\", \"click\"], [4, \"ngFor\", \"ngForOf\"], [1, \"square\"], [\"class\", \"number\", 4, \"ngIf\"], [4, \"ngIf\"], [1, \"number\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\")(1, \"label\", 0);\n      i0.ɵɵtext(2, \"Random Number:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(3, \"br\");\n      i0.ɵɵelementStart(4, \"input\", 1);\n      i0.ɵɵlistener(\"ngModelChange\", function AppComponent_Template_input_ngModelChange_4_listener($event) {\n        return ctx.randomNumber = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(5, \" \\u00A0\");\n      i0.ɵɵelementStart(6, \"button\", 2);\n      i0.ɵɵlistener(\"click\", function AppComponent_Template_button_click_6_listener() {\n        return ctx.generateRandom();\n      });\n      i0.ɵɵtext(7, \"Generate Random\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(8, \"br\");\n      i0.ɵɵelementStart(9, \"label\", 3);\n      i0.ɵɵtext(10, \"Limit:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(11, \"br\");\n      i0.ɵɵelementStart(12, \"input\", 4);\n      i0.ɵɵlistener(\"ngModelChange\", function AppComponent_Template_input_ngModelChange_12_listener($event) {\n        return ctx.limit = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(13, \"br\")(14, \"br\");\n      i0.ɵɵelementStart(15, \"button\", 5);\n      i0.ɵɵlistener(\"click\", function AppComponent_Template_button_click_15_listener() {\n        return ctx.generateSeries();\n      });\n      i0.ɵɵtext(16, \"Generate Series\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(17, AppComponent_div_17_Template, 5, 7, \"div\", 6);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.randomNumber);\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngModel\", ctx.limit);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"disabled\", !ctx.formIsValid());\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.seriesFB);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NumberValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.NgForm],\n  styles: [\".square[_ngcontent-%COMP%] {\\n  display: inline-block;\\n  width: 40px;\\n  height: 40px;\\n  border: 1px solid white;\\n  text-align: center;\\n  vertical-align: middle;\\n}\\n.square[_ngcontent-%COMP%]   .span[_ngcontent-%COMP%] {\\n  display: inline-block;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYXBwLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0kscUJBQUE7RUFFQSxXQUFBO0VBQ0EsWUFBQTtFQUNBLHVCQUFBO0VBQ0Esa0JBQUE7RUFDQSxzQkFBQTtBQUFKO0FBQ0E7RUFDRSxxQkFBQTtBQUNGOztBQU1BOzs7Ozs7Ozs7Ozs7Ozs7S0FBQSIsInNvdXJjZXNDb250ZW50IjpbIi5zcXVhcmUge1xyXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrOyBcclxuICBcclxuICAgIHdpZHRoOiA0MHB4O1xyXG4gICAgaGVpZ2h0OiA0MHB4O1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQgd2hpdGU7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xyXG4uc3BhbiB7XHJcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrOyBcclxuXHJcbn1cclxuXHJcbiAgIFxyXG4gIH1cclxuIFxyXG4vKiAgIFxyXG4gIC5maXp6IHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMwYzNmNWU7XHJcbiAgfVxyXG4gIFxyXG4gIC5idXp6IHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNlNjRjNjU7XHJcbiAgfVxyXG4gIFxyXG4gIC5maXp6YnV6eiB7XHJcbiAgICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQodG8gcmlnaHQsICMwYzNmNWUsICNlNjRjNjUpO1xyXG4gIH1cclxuICBcclxuICAucmFuZG9tIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICM1ZTVlNWU7XHJcbiAgfSAqL1xyXG4gIFxyXG4gXHJcbiAgIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","AppComponent","constructor","fizzBuzzService","cdr","ngOnInit","generateSeries","getFizzBuzzSeries","randomNumber","limit","subscribe","series","setTimeout","seriesFB","generateRandom","min","max","Math","floor","random","formIsValid","isNumber","val","getSquareColor","element","i","color","fizzColor","getRandomColor","buzzColor","detectChanges","getSquareGradient","letters","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\Daynel\\Downloads\\FizzBuzz\\ClientApp\\src\\app\\app.component.html","C:\\Users\\Daynel\\Downloads\\FizzBuzz\\ClientApp\\src\\app\\app.component.ts"],"sourcesContent":["\n\n\n\n<form>\n  <label for=\"randomNumber\">Random Number:</label><br>\n  <input type=\"number\" id=\"randomNumber\" [(ngModel)]=\"randomNumber\" name=\"randomNumber\" readonly = true>\n  &nbsp;<button (click)=\"generateRandom()\">Generate Random</button><br>\n  <label for=\"limit\">Limit:</label><br>\n  <input type=\"number\" id=\"limit\" [(ngModel)]=\"limit\" name=\"limit\"><br><br>\n  <button [disabled]=\"!formIsValid()\" (click)=\"generateSeries()\">Generate Series</button>\n</form> \n\n\n<div *ngFor=\"let element of seriesFB; let i = index\">\n  <!-- <div *ngIf=\"(i + 1) % 10 === 0\"> -->\n    <span class=\"square\" [style.background-color]=\"getSquareColor(element, i)\" [style.background]=\"getSquareGradient(element)\">\n      <span class=\"number\" *ngIf=\"isNumber(element)\">{{element}}</span>\n      <span *ngIf=\"!isNumber(element)\">{{element}}</span>\n    </span>\n    <br  *ngIf=\"(i + 1) % 10 === 0\">\n  <!-- </div> -->\n  <!-- <div *ngIf=\"(i + 1) % 10 !== 0\">\n    <span class=\"square\" [style.background-color]=\"getSquareColor(element, i)\" [style.background]=\"getSquareGradient(element)\">\n      <span class=\"number\" *ngIf=\"isNumber(element)\">{{element}}</span>\n      <span *ngIf=\"!isNumber(element)\">{{element}}</span>\n    </span>\n  </div> -->\n</div>\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { FizzBuzzService } from './fizz-buzz.service';\nimport {ChangeDetectorRef } from '@angular/core';\n\n\n\n\n\n\n\n@Component({\n  selector: 'app-fizzbuzz',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  seriesFB: any;\n  randomNumber!: number;\n  limit!: number;\n  randomN!: number;\n  fizzColor!: string;\n  buzzColor!: string;\n\n  constructor(private fizzBuzzService: FizzBuzzService, private cdr: ChangeDetectorRef) { }\n\n  ngOnInit(): void {\n  }\n\n  generateSeries(): void {\n   \n    this.fizzBuzzService.getFizzBuzzSeries(this.randomNumber, this.limit).subscribe((series: any) => {\n       \n      setTimeout(() => {\n        this.seriesFB = series;\n    });\n      \n   \n\n    \n   \n     \n\n    });\n  }\n\n\n  generateRandom(min =1, max=100) {\n    this.randomNumber= Math.floor(Math.random() * (max - min + 1)) + min;\n  }\n\n  formIsValid() {\n    return this.limit > this.randomNumber;\n  }\n\n  isNumber(val: any): boolean { return typeof val === 'number'; }\n\n\n\n  getSquareColor(element: number | string, i:number): any {\n   \n   let color = ''\n   if (i===0)\n   { this.fizzColor = this.getRandomColor();\n    this.buzzColor = this.getRandomColor();}\n  \n    if (element === 'fizz') {\n    color = this.fizzColor;}\n    else\n    if (element === 'buzz') {\n      color = this.buzzColor;}\n    else{\n        color = this.getRandomColor()\n      }\n    \n    this.cdr.detectChanges\n    \n    return color\n   \n  }\n\n   getSquareGradient(element: number | string): any {\n  if (element === 'fizzbuzz') {\n      return `linear-gradient(to right, ${this.fizzColor}, ${this.buzzColor})`;\n    }\n   \n  }\n\n  getRandomColor(): string {\n    const letters = '0123456789ABCDEF';\n    let color = '#';\n    for (let i = 0; i < 6; i++) {\n      color += letters[Math.floor(Math.random() * 16)];\n    }\n    \n    return color;\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}